#ifndef DataBaseOperate_h__
#define DataBaseOperate_h__

#include "DataBaseOperate_global.h"
#include <string>
#include <map>
#include <vector>
//////////////////////////////////////////////////////////////////////////
///<summary> 数据库通用类 </summary>
///
///<remarks> 朱正天,2017/11/1. </remarks>
///////////////////////////////////////////////////////////////////////////*/
class QSqlQuery;
class DATABASEOPERATE_LIB_EXPORT DataBaseOperate
{
public:
	//////////////////////////////////////////////////////////////////////////
	///<summary>连接数据库 </summary>
	///<params>ip地址，端口号，数据库名称，用户名，密码，数据库类型，连接名称</params>
	///<return>连接成功返回true，否则返回false</return>
	///<remarks> 10/31/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool ConnectToDataBase(const std::string &ip,int port,const std::string &dbName,const std::string &userName,const std::string &passWord,
							const std::string &dbType = "QMYSQL",const std::string &connectLabel = "");
	//////////////////////////////////////////////////////////////////////////
	///<summary>连接本地sqllite数据库 </summary>
	///<params>数据库名称,数据库类型（QSQLITE），连接名称</params>
	///<return>连接成功返回true，否则返回false</return>
	///<remarks> 10/31/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool ConnectToDataBase(const std::string &dbName, const std::string &dbType = "QSQLITE",const std::string &connectLabel="");

	//////////////////////////////////////////////////////////////////////////
	///<summary> 关闭数据库连接(不进行其他操作) </summary>
	///
	///<remarks> 朱正天,2017/10/31. </remarks>
	///////////////////////////////////////////////////////////////////////////*/
	bool CloseConnect();
public:
	//////////////////////////////////////////////////////////////////////////
	///<summary> 开始事务 </summary>
	///
	///<remarks> 朱正天,2017/10/31. </remarks>
	///////////////////////////////////////////////////////////////////////////*/
	bool BeginTransation();

	//////////////////////////////////////////////////////////////////////////
	///<summary> 提交操作 </summary>
	///
	///<remarks> 朱正天,2017/10/31. </remarks>
	///////////////////////////////////////////////////////////////////////////*/
	bool CommitOperate();

	//////////////////////////////////////////////////////////////////////////
	///<summary> 回滚操作 </summary>
	///
	///<remarks> 朱正天,2017/10/31. </remarks>
	///////////////////////////////////////////////////////////////////////////*/
	bool RollBackOperate();

public:
	//////////////////////////////////////////////////////////////////////////
	///<summary>查询数据 </summary>
	///<params>结果，表名，键名，值（键名为空则查询全部数据）</params>
	///<return>查询成功返回true，否则返回false</return>
	///<remarks> 10/31/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool QueryData(std::vector<std::map<std::string, std::string>> &Result,const std::string &tableName,
				   const std::string &keyName="",const std::string &value="");

	//////////////////////////////////////////////////////////////////////////
	///<summary>插入数据 </summary>
	///<params>表名，数据（必须与数据库中顺序一样）</params>
	///<return>成功返回true，否则返回false</return>
	///<remarks> 11/1/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool InsertData(const std::string &tableName,const std::vector<std::string> &values);

	//////////////////////////////////////////////////////////////////////////
	///<summary>删除数据 </summary>
	///<params>表名，键，值</params>
	///<return>成功返回true，否则返回false</return>
	///<remarks> 11/1/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool DeleteData(const std::string &tableName,const std::string &keyName="",const std::string &value="");

	//////////////////////////////////////////////////////////////////////////
	///<summary>更新数据 </summary>
	///<params>表名，键，值，需要更新的数据对</params>
	///<return>成功返回true，否则返回false</return>
	///<remarks> 11/1/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool UpdateData(const std::string &tableName,const std::string &keyName,const std::string &value,
					const std::map<std::string,std::string> &valueMaps);

	//////////////////////////////////////////////////////////////////////////
	///<summary>清空数据表 </summary>
	///<params>表名</params>
	///<return>成功返回true，否则返回false</return>
	///<remarks> 11/1/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	bool ClearData(const std::string &tableName);
public:
	//////////////////////////////////////////////////////////////////////////
	///<summary> 判断当前是否连通数据库 </summary>
	///
	///<remarks> 朱正天,2017/11/1. </remarks>
	///////////////////////////////////////////////////////////////////////////*/
	bool IsConnected()const;
private:
	//////////////////////////////////////////////////////////////////////////
	///<summary>将查询结果转换为 键 值 对 </summary>
	///<params>查询结果  转换结果</params>
	///<return>void</return>
	///<remarks> 11/1/2017 --朱正天  </remarks>/////////////////////////////
	///////////////////////////////////////////////////////////////////////////
	void ParseSqlQuery(QSqlQuery sqlQuery, std::vector<std::map<std::string, std::string>> &Result);
public:
	DataBaseOperate();
	virtual ~DataBaseOperate();
private:
	class DataBaseOperatePrivate;
	DataBaseOperatePrivate *_p;
};
#endif // DataBaseOperate_h__

